@model IEnumerable<UniversityManagementSystemMVCApp.Models.ResultEntry>

@{
    ViewBag.Title = "Index";
}


<p>
    @Html.ActionLink("Create New", "Create")
   
</p>
<div id ="result">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Course.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Grade.GradeDescription)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.StudentRegistration.Name)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Department)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Course.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grade.GradeDescription)
                </td>
                @*<td>
            @Html.DisplayFor(modelItem => item.StudentRegistration.Name)
        </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.ResultEntryId }) |
                    @Html.ActionLink("Details", "Details", new { id=item.ResultEntryId }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.ResultEntryId })
                </td>
            </tr>
        }

    </table>
    <button class="btn btn-success" onclick="javascript:demoFromHTML();"> PDF Generate</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jspdf.debug.js"></script>

    <script>
        function demoFromHTML() {
            var pdf = new jsPDF('p', 'pt', 'letter');

            source = $('#result')[0];


            specialElementHandlers = {

                '#bypassme': function (element, renderer) {

                    return true
                }
            };
            margins = {
                top: 80,
                bottom: 60,
                left: 40,
                width: 522
            };
            // all coords and widths are in jsPDF instance's declared units
            // 'inches' in this case
            pdf.fromHTML(
            source, // HTML string or DOM elem ref.
            margins.left, // x coord
            margins.top, { // y coord
                'width': margins.width, // max width of content on PDF
                'elementHandlers': specialElementHandlers
            },

            function (dispose) {
                // dispose: object with X, Y of the last line add to the PDF
                //          this allow the insertion of new lines after html
                pdf.save('Result.pdf');
            },
            margins);
        }
    </script>
}




